@using Web.Models.Dtos
@model AboutUs
@{
    var titleArray = Model.Title.Split(",");
    var animateds = titleArray.Skip(1).ToList();
    var statics = titleArray.Take(1).FirstOrDefault();
    var breadcrumbdata = TempData["BreadCrumb"];
    var page = TempData["Page"];
    TempData["Title"] = page;
    Breadcrumb breadcrumb = new();
    if (breadcrumbdata != null && page != null)
    {
        breadcrumb.Page = page.ToString();
        breadcrumb.Data = breadcrumbdata as List<string>;
    }
    string _page =page.ToString();
}

<div role="main" class="main" itemscope itemtype="https://schema.org/WebPage">
    @{
        <span style="display:none;">@_page</span>
    }
    @await Component.InvokeAsync("BreadCrumb", breadcrumb);
    <div class="container pt-5">
        <div class="col">
            <div class="row text-center pb-5">
                <div class="col-md-9 mx-md-auto">
                    <div class="overflow-hidden mb-3">
                        <h1 class="word-rotator slide font-weight-bold text-8 mb-0 appear-animation animated maskUp appear-animation-visible" data-appear-animation="maskUp" style="animation-delay: 100ms;">
                            <span>@statics, </span>
                            <span class="word-rotator-words bg-primary" style="width: 142.844px;">
                                @foreach (var item in animateds)
                                {
                                    <b class="is-visible">@item</b>
                                }

                            </span>
                        </h1>
                    </div>
                    <div class="overflow-hidden mb-3">
                        <p class="lead mb-0 appear-animation animated maskUp appear-animation-visible" data-appear-animation="maskUp" data-appear-animation-delay="200" style="animation-delay: 200ms;" itemprop="description">
                            @Model.SubTitle
                        </p>
                    </div>
                </div>
            </div>
        </div>
        @if (!string.IsNullOrEmpty(Model.Content1))
        {
            <div class="row py-4 mb-2">
                <div class="col-md-7 order-2">


                    <div class="lead appear-animation animated fadeInUpShorter appear-animation-visible" data-appear-animation="fadeInUpShorter" data-appear-animation-delay="700" style="animation-delay: 700ms;" itemprop="description">@Model.Content1</div>

                    <hr class="solid my-4 appear-animation animated fadeInUpShorter appear-animation-visible" data-appear-animation="fadeInUpShorter" data-appear-animation-delay="900" style="animation-delay: 900ms;">

                </div>
                @if (!string.IsNullOrEmpty(Model.ImagePath1))
                {
                    <div class="col-md-5 order-md-2 mb-4 mb-lg-0 appear-animation animated fadeInRightShorter appear-animation-visible" data-appear-animation="fadeInRightShorter" style="animation-delay: 100ms;">
                        <img src="@StaticDetails.GetImage(Model.ImagePath1)" class="img-fluid mb-2" alt="@Model.ImagePath1">
                    </div>
                }

            </div>
        }
        @if (!string.IsNullOrEmpty(Model.Content2))
        {
            <div class="row py-4 mb-2">
                @if (!string.IsNullOrEmpty(Model.ImagePath2))
                {
                    <div class="col-md-5 order-2">
                        <img src="@StaticDetails.GetImage(Model.ImagePath2)" class="img-fluid mb-2" alt="@Model.ImagePath2">
                    </div>
                }

                <div class="col-md-7 order-md-2 mb-4 mb-lg-0 appear-animation animated fadeInLeftShorter appear-animation-visible" data-appear-animation="fadeInLeftShorter" style="animation-delay: 100ms;">

                    <div class="lead appear-animation animated fadeInUpShorter appear-animation-visible" data-appear-animation="fadeInUpShorter" data-appear-animation-delay="700" style="animation-delay: 700ms;" itemprop="description">@Model.Content2</div>

                    <hr class="solid my-4 appear-animation animated fadeInUpShorter appear-animation-visible" data-appear-animation="fadeInUpShorter" data-appear-animation-delay="900" style="animation-delay: 900ms;">

                </div>
            </div>
        }
        @if (!string.IsNullOrEmpty(Model.Content3))
        {
            <div class="row py-4 mb-2">
                <div class="col-md-7 order-2">


                    <div class="lead appear-animation animated fadeInUpShorter appear-animation-visible" data-appear-animation="fadeInUpShorter" data-appear-animation-delay="700" style="animation-delay: 700ms;" itemprop="description">@Model.Content3</div>

                    <hr class="solid my-4 appear-animation animated fadeInUpShorter appear-animation-visible" data-appear-animation="fadeInUpShorter" data-appear-animation-delay="900" style="animation-delay: 900ms;">

                </div>
                @if (!string.IsNullOrEmpty(Model.ImagePath2))
                {
                    <div class="col-md-5 order-md-2 mb-4 mb-lg-0 appear-animation animated fadeInRightShorter appear-animation-visible" data-appear-animation="fadeInRightShorter" style="animation-delay: 100ms;">
                        <img src="@StaticDetails.GetImage(Model.ImagePath3)" class="img-fluid mb-2" alt="@Model.ImagePath3">
                    </div>
                }

            </div>
        }

    </div>
</div>
