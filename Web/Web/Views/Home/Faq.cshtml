@using Web.Models.Dtos
@model List<Faq>
@{

    var breadcrumbdata = TempData["BreadCrumb"];
    var page = TempData["Page"];
    string _page = page.ToString();
    TempData["Title"] = page;
    Breadcrumb breadcrumb = new();
    if (breadcrumbdata != null && page != null)
    {
        breadcrumb.Page = page.ToString();
        breadcrumb.Data = breadcrumbdata as List<string>;
    }
}
<div itemscope itemtype="https://schema.org/FAQPage">

    @await Component.InvokeAsync("BreadCrumb", breadcrumb)

    <div class="container py-4">

        <div class="row">
            <div class="col">
               
                <h2 class="font-weight-normal text-7 mb-2"> <strong class="font-weight-extra-bold">Sıkça</strong> Sorulan Sorular</h2>
                <p class="lead">Sıkça sorulan soruları sizin için topladık. Buradaki cevaplar sizin sorularınızı cevaplamıyorsa <a href="tel:+90 532 205 31 76">burdan</a> biziz arayarak detaylı bilgi edinebilirsiniz.</p>

                <hr class="solid my-5">

                <div class="toggle toggle-primary m-0" data-plugin-toggle="">
                     @foreach (var item in Model)
                {
                    <section class="toggle" itemscope itemprop="mainEntity" itemtype="https://schema.org/Question">
                        <a class="toggle-title" itemprop="name">@item.Title</a>
                        <div class="toggle-content" style="display: none;" itemscope itemprop="acceptedAnswer" itemtype="https://schema.org/Answer">
                            <p itemprop="text">&nbsp;&nbsp;&nbsp;@item.Description</p>
                        </div>
                    </section>
                }
                </div>

            </div>

        </div>

    </div>
</div>